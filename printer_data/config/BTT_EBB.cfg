# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: 6cc89ea859c0




[fan]
pin: PA8 # Output pin controlling the fan. This parameter must be provided.
max_power: 0.8 
# This should be set to 0.8 on most motherboards to give full range of control to your slicer. 
# Anything above 80% duty cycle will be full power on this particular brushless driver.
# To fine-tune the max_power parameter for your particular motherboard, set max_power to 1.0, go into the Klipper dashboard, and increase fan speed 1% at a time until the actual fan speed stops increasing as you increase the fan speed. Divide the fan speed at this point by 100 and enter it into the max_power parameter.
# This parameter defines the maximum power (expressed as a value from 0.0 to 1.0) that the pin may be set to. 
# The value 1.0 allows the pin to be set fully enabled for extended periods, while a value of 0.5 would allow the pin to be enabled for no more than half the time. 
# This setting may be used to limit the total power output (over extended periods) to the fan. 
# If this value is less than 1.0, then fan speed requests will be scaled between zero and max_power (for example, if max_power is 0.9 and a fan speed of 80% is requested, then the fan power will be set to 72%).
shutdown_speed: 0 
# The desired fan speed (expressed as a value from 0.0 to 1.0) if 
# The microcontroller software enters an error state. 
# The default is 0.
cycle_time: 0.005 
# The amount of time (in seconds) for each PWM power cycle to the fan. 
# It is recommended this be 10 milliseconds or greater when using software-based PWM. 
# The default is 0.010 seconds.
hardware_pwm: False 
# Enable this to use hardware PWM instead of software PWM. 
# Most fans do not work well with hardware PWM, so it is not recommended to enable this unless there is an electrical requirement to switch at very high speeds. 
# When using hardware PWM, the actual cycle time is constrained by the implementation and may be significantly different than the requested cycle_time. 
# The default is False.
kick_start_time: 0.100 
# Time (in seconds) to run the fan at full speed when either first enabling or increasing it by more than 50% (helps get the fan spinning). 
# The default is 0.100 seconds.
off_below: 0.1 

[heater_fan Extruder]
pin: EBBCan: PA0
heater: extruder
tachometer_pin: ^EBBCan: PB9 # Set to the pin you like to use. Make sure it has either a hardware or software pullup
tachometer_ppr: 2
tachometer_poll_interval: 0.0009
heater_temp: 50.0

#[neopixel hotend_rgb]
#pin: EBBCan:PD3

#[bltouch]
#sensor_pin: ^EBBCan:PB8
#control_pin: EBBCan:PB9

#[filament_switch_sensor switch_sensor]
#switch_pin: EBBCan:PB4

#[filament_motion_sensor motion_sensor]
#switch_pin: ^EBBCan:PB3